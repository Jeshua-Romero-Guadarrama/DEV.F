# Gesti√≥n de Lista de Compras

Este proyecto proporciona un peque√±o m√≥dulo en **JavaScript (ES2020+)** para gestionar una lista de compras usando un arreglo y tres operaciones b√°sicas:

* **agregarProducto**: A√±ade un producto al final de la lista (sin duplicados).
* **eliminarProducto**: Elimina un producto existente de la lista.
* **mostrarLista**: Muestra la lista completa en la consola.

---

## üìÅ Estructura del proyecto

```
Actividad_2/
‚îú‚îÄ‚îÄ proyecto_estructuras_datos.js   # L√≥gica principal de la lista de compras
‚îî‚îÄ‚îÄ README.md                       # Documentaci√≥n del proyecto
```

## üõ†Ô∏è Requisitos

* [Node.js](https://nodejs.org/) (versi√≥n LTS o superior)
* Navegador web moderno (si deseas probar con HTML)
* (Opcional) VS Code con la extensi√≥n Live Server

## üöÄ Instalaci√≥n y Configuraci√≥n

1. Clona o descarga este repositorio en tu m√°quina local.
2. Abre una terminal y navega a la carpeta del proyecto:

   ```bash
   cd Actividad_2
   ```
3. Aseg√∫rate de que Node.js est√© disponible:

   ```bash
   node -v
   ```

## üèÉ‚Äç‚ôÇÔ∏è Uso con Node.js

1. A√±ade llamadas a las funciones al final del archivo `proyecto_estructuras_datos.js`. Por ejemplo:

   ```js
   agregarProducto('Leche');
   agregarProducto('Pan');
   mostrarLista();
   ```
2. Ejecuta el script con Node.js:

   ```bash
   node ./proyecto_estructuras_datos.js
   ```
3. Observa la salida en la consola.

## üîÑ Uso interactivo con Node REPL

1. Inicia el REPL de Node en la carpeta del proyecto:

   ```bash
   node
   ```
2. Carga el m√≥dulo:

   ```js
   .load proyecto_estructuras_datos.js
   ```
3. Llama a las funciones directamente:

   ```js
   > agregarProducto('Huevos');
   > mostrarLista();
   ```

## üìã Descripci√≥n de las funciones

| Funci√≥n              | Par√°metros       | Comportamiento                                                                                |
| -------------------- | ---------------- | --------------------------------------------------------------------------------------------- |
| **agregarProducto**  | `producto` (str) | A√±ade `producto` si no est√° vac√≠o ni duplicado (ignora may√∫sculas). Informa en consola.       |
| **eliminarProducto** | `producto` (str) | Elimina la primera coincidencia (insensible a may√∫sculas). Informa si no existe o se elimin√≥. |
| **mostrarLista**     | ‚Äì                | Imprime la lista numerada. Indica si est√° vac√≠a.                                              |
